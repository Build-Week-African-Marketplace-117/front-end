{"ast":null,"code":"import { ADD_ITEM, DELETE_ITEM, EDIT_ITEM, UPDATE_ITEM } from '../actions/marketActions'; //creating initial state \n\nconst initialState = {\n  item: null,\n  location: \"\",\n  name: \"\",\n  price: \"\",\n  error: \"\",\n  isFetching: false\n};\n\nconst reducer = (state, action) => {\n  var list = JSON.parse(localStorage.getItem('token'));\n\n  switch (action.type) {\n    case \"INSERT_ITEM\":\n      list.push(action.payload);\n      localStorage.setItem('token', JSON.stringify(list));\n      return {\n        list,\n        currentIndex: -1\n      };\n\n    case \"DELETE_ITEM\":\n      list.slice(action.payload, 1);\n      localStorage.setItem('token', JSON.stringify(list));\n      return {\n        list,\n        currentIndex: -1\n      };\n\n    case \"UPDATE_ITEM\":\n      list[state.currentIndex] = action.payload;\n      localStorage.setItem('token', JSON.stringify(list));\n      return {\n        list,\n        currentIndex: -1\n      };\n\n    case \"UPDATE_INDEX\":\n      return {\n        list,\n        currentIndex: -1\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Lenovo/front-end/crud-app/src/reducers/marketReducers.js"],"names":["ADD_ITEM","DELETE_ITEM","EDIT_ITEM","UPDATE_ITEM","initialState","item","location","name","price","error","isFetching","reducer","state","action","list","JSON","parse","localStorage","getItem","type","push","payload","setItem","stringify","currentIndex","slice"],"mappings":"AAAA,SAAQA,QAAR,EAAiBC,WAAjB,EAA6BC,SAA7B,EAAuCC,WAAvC,QAAyD,0BAAzD,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAC,IADY;AAEjBC,EAAAA,QAAQ,EAAC,EAFQ;AAGjBC,EAAAA,IAAI,EAAC,EAHY;AAIjBC,EAAAA,KAAK,EAAC,EAJW;AAKjBC,EAAAA,KAAK,EAAE,EALU;AAMjBC,EAAAA,UAAU,EAAC;AANM,CAArB;;AAUA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAkB;AAC9B,MAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAX;;AAEA,UAAQL,MAAM,CAACM,IAAf;AACI,SAAK,aAAL;AACIL,MAAAA,IAAI,CAACM,IAAL,CAAUP,MAAM,CAACQ,OAAjB;AACAJ,MAAAA,YAAY,CAACK,OAAb,CAAqB,OAArB,EAA6BP,IAAI,CAACQ,SAAL,CAAeT,IAAf,CAA7B;AACA,aAAO;AAACA,QAAAA,IAAD;AAAOU,QAAAA,YAAY,EAAC,CAAC;AAArB,OAAP;;AAEA,SAAK,aAAL;AACIV,MAAAA,IAAI,CAACW,KAAL,CAAWZ,MAAM,CAACQ,OAAlB,EAA0B,CAA1B;AACAJ,MAAAA,YAAY,CAACK,OAAb,CAAqB,OAArB,EAA6BP,IAAI,CAACQ,SAAL,CAAeT,IAAf,CAA7B;AACA,aAAO;AAACA,QAAAA,IAAD;AAAOU,QAAAA,YAAY,EAAC,CAAC;AAArB,OAAP;;AAEA,SAAK,aAAL;AACIV,MAAAA,IAAI,CAACF,KAAK,CAACY,YAAP,CAAJ,GAAyBX,MAAM,CAACQ,OAAhC;AACAJ,MAAAA,YAAY,CAACK,OAAb,CAAqB,OAArB,EAA6BP,IAAI,CAACQ,SAAL,CAAeT,IAAf,CAA7B;AACA,aAAO;AAACA,QAAAA,IAAD;AAAOU,QAAAA,YAAY,EAAC,CAAC;AAArB,OAAP;;AAEA,SAAK,cAAL;AAEI,aAAO;AAACV,QAAAA,IAAD;AAAOU,QAAAA,YAAY,EAAC,CAAC;AAArB,OAAP;;AAKZ;AACA,aAAOZ,KAAP;AAxBR;AA0BC,CA7BL;;AA8BA,eAAeD,OAAf","sourcesContent":["import {ADD_ITEM,DELETE_ITEM,EDIT_ITEM,UPDATE_ITEM} from '../actions/marketActions';\r\n\r\n//creating initial state \r\nconst initialState = {\r\n    item:null,\r\n    location:\"\",\r\n    name:\"\",\r\n    price:\"\",\r\n    error:(\"\"),\r\n    isFetching:false\r\n\r\n};\r\n\r\nconst reducer = (state, action )=>{\r\n    var list = JSON.parse(localStorage.getItem('token'))\r\n\r\n    switch (action.type){\r\n        case \"INSERT_ITEM\":\r\n            list.push(action.payload)\r\n            localStorage.setItem('token',JSON.stringify(list))\r\n            return {list, currentIndex:-1}\r\n\r\n            case \"DELETE_ITEM\":\r\n                list.slice(action.payload,1)\r\n                localStorage.setItem('token',JSON.stringify(list))\r\n                return {list, currentIndex:-1}\r\n\r\n                case \"UPDATE_ITEM\":\r\n                    list[state.currentIndex]=action.payload\r\n                    localStorage.setItem('token',JSON.stringify(list))\r\n                    return {list, currentIndex:-1}\r\n\r\n                    case \"UPDATE_INDEX\":\r\n                        \r\n                        return {list, currentIndex:-1}\r\n            \r\n        \r\n    \r\n\r\n            default:\r\n            return state\r\n        }\r\n    }\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}